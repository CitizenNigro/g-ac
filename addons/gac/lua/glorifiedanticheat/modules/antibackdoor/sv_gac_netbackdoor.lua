local
a={a='Add',b='config',c='Print',d='funcinfo',e='util',f='source',g='linedefined',h='lastlinedefined',i='Receivers',j='AddDetection',k='BACKDOOR_EXPLOITATION_PUNISHMENT',l='BACKDOOR_EXPLOITATION_BANTIME',m='CheckExploitables'}local
b=hook.Remove
local
c=concommand[a.a]local
d=string.lower
local
e=file.Write
local
f=math.random
local
g=util.NetworkStringToID
local
h=timer.Simple
local
i=pairs
local
j=isfunction
local
k=concommand.GetTable
local
l=concommand[a.a]local
m=hook[a.a]local
n=IsValid
if!gAC[a.b].BACKDOOR_NET_EXPLOIT_CHECKS
then
return
end
local
o=gAC[a.b].EXPLOIT_NETS
local
p=gAC[a.b].BACKDOOR_NETS
local
q=gAC[a.b].EXPLOIT_COMMANDS_LIST
local
r=gAC[a.b].BACKDOOR_COMMANDS_LIST
local
s={}local
t={}local
u={}function
gAC.CheckExploitables()local
w=os.date("%I:%M:%S %p - %d/%m/%Y",os.time())do
local
x=nil
local
y=gAC_ConCmdTable
for
z,A
in
i(y)do
if
A==u[z]then
continue
end
for
B=1,#r
do
if
r[B]==z
then
if
not
x
then
x={}end
local
C=jit[a.e][a.d](A)x[#x+1]='Command: "'..z..'"\nSource: '..C[a.f]..'\nLine #'..C[a.g]..'-'..C[a.h]u[z]=function(D)if
n(D)then
gAC[a.j](D,"Backdoor console command called ("..z..") [Code 103]",gAC[a.b][a.k],gAC[a.b][a.l])end
end
l(z,u[z])break
end
end
end
if
x
then
gAC[a.c]('[Anti-NetBackDoor] WARNING - Found '..#x..' backdoor console commands, recommend removing them immediately!')gAC[a.c]('[Anti-NetBackDoor] List of backdoor commands have been put into gac_backdoorcmds.dat in the data folder')local
z='List of backdoor cmds as of '..w..'\n\n'for
A=1,#x
do
z=z..x[A]..'\n'z=z.."-------------------------------------"..'\n'end
e('gac_backdoorcmds.dat',z)gAC[a.c]('[Anti-NetBackDoor] Due to this detection, backdoor console commands have been re-written to detect users attempting to use them.')end
end
do
local
x=nil
local
y=gAC_ConCmdTable
for
z,A
in
i(y)do
if
A==u
then
continue
end
for
B=1,#r
do
if
r[B]==z
then
if
not
x
then
x={}end
local
C=jit[a.e][a.d](A)x[#x+1]='Command: "'..z..'"\nSource: '..C[a.f]..'\nLine #'..C[a.g]..'-'..C[a.h]break
end
end
end
if
x
then
gAC[a.c]('[Anti-NetBackDoor] WARNING - Found '..#x..' exploitable console commands, remember to keep commands up to date!')gAC[a.c]('[Anti-NetBackDoor] List of exploitable commands have been put into gac_exploitablecmds.dat in the data folder')local
z='List of exploitable cmds as of '..w..'\n\n'for
A=1,#x
do
z=z..x[A]..'\n'z=z.."-------------------------------------"..'\n'end
e('gac_exploitablecmds.dat',z)end
end
do
local
x=nil
for
y=1,#o
do
local
z=o[y]local
A=net[a.i][z]if
not
A
then
z=d(z)A=net[a.i][z]end
local
B
if
A
and
g(z)==0
then
B=2
elseif
A
and
g(z)~=0
then
B=1
end
if
B
then
if
not
x
then
x={}end
local
C=jit[a.e][a.d](A)x[#x+1]='Net Message: "'..z..'"\nSource: '..C[a.f]..'\nLine #'..C[a.g]..'-'..C[a.h]end
end
if
x
then
gAC[a.c]('[Anti-NetBackDoor] WARNING - Found '..#x..' exploitable nets, remember to keep network messages up to date!')gAC[a.c]('[Anti-NetBackDoor] List of exploitable nets have been put into gac_exploitablenets.dat in the data folder')local
y='List of exploitable nets as of '..w..'\n\n'for
z=1,#x
do
y=y..x[z]..'\n'y=y.."-------------------------------------"..'\n'end
e('gac_exploitablenets.dat',y)end
end
do
local
x=nil
for
y=1,#p
do
local
z=p[y]local
A=net[a.i][z]if
not
A
then
z=d(z)A=net[a.i][z]end
if
s[z]then
if
j(t[z])and
A==t[z]then
A=s[z]else
s[z]=!!1
end
end
local
B
if
A
and
g(z)==0
then
B=2
elseif
A
and
g(z)~=0
then
B=1
end
if
B
then
if
not
x
then
x={}end
local
C=jit[a.e][a.d](A)local
D=#x+1
x[D]='Net Message: "'..z..'"\nSource: '..C[a.f]..'\nLine #'..C[a.g]..'-'..C[a.h]if
s[z]==!!1
then
x[D]=x[D]..'\n'..'WARNING: this net message was regenerated!'s[z]=A
net[a.i][z]=t[z]elseif
not
s[z]then
s[z]=A
t[z]=function(E,F)gAC[a.j](F,"Backdoor net message called ("..z..") [Code 103]",gAC[a.b][a.k],gAC[a.b][a.l])end
net[a.i][z]=t[z]end
end
end
if
x
then
gAC[a.c]('[Anti-NetBackDoor] WARNING - Found '..#x..' backdoor nets, recommend removing them immediately!')gAC[a.c]('[Anti-NetBackDoor] List of backdoor nets have been put into gac_backdoornets.dat in the data folder')local
y='List of backdoors as of '..w..'\n\n'for
z=1,#x
do
y=y..x[z]..'\n'y=y.."-------------------------------------"..'\n'end
e('gac_backdoornets.dat',y)gAC[a.c]('[Anti-NetBackDoor] Due to this detection, backdoor nets have been re-written to detect users attempting to use them.')end
end
end
local
v='__'..gAC.Encoder.stringrandom(f(8,15))m('Think',v,function()h(5,function()gAC[a.m]()end)b('Think',v)end)l('gac_checkbackdoors',function(w)if
n(w)then
return
end
gAC[a.m]()end)