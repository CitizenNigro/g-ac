local
__CHAR,__FLOOR,__XOR
__CHAR=function(⁮⁮⁪⁮)local
⁮‪‪={[1]="\1",[2]="\2",[3]="\3",[4]="\4",[5]="\5",[6]="\6",[7]="\7",[8]="\b",[9]="\t",[10]="\n",[11]="\v",[12]="\f",[13]="\r",[14]="\14",[15]="\15",[16]="\16",[17]="\17",[18]="\18",[19]="\19",[20]="\20",[21]="\21",[22]="\22",[23]="\23",[24]="\24",[25]="\25",[26]="\26",[27]="\27",[28]="\28",[29]="\29",[30]="\30",[31]="\31",[32]="\32",[33]="\33",[34]="\"",[35]="\35",[36]="\36",[37]="\37",[38]="\38",[39]="\'",[40]="\40",[41]="\41",[42]="\42",[43]="\43",[44]="\44",[45]="\45",[46]="\46",[47]="\47",[48]="\48",[49]="\49",[50]="\50",[51]="\51",[52]="\52",[53]="\53",[54]="\54",[55]="\55",[56]="\56",[57]="\57",[58]="\58",[59]="\59",[60]="\60",[61]="\61",[62]="\62",[63]="\63",[64]="\64",[65]="\65",[66]="\66",[67]="\67",[68]="\68",[69]="\69",[70]="\70",[71]="\71",[72]="\72",[73]="\73",[74]="\74",[75]="\75",[76]="\76",[77]="\77",[78]="\78",[79]="\79",[80]="\80",[81]="\81",[82]="\82",[83]="\83",[84]="\84",[85]="\85",[86]="\86",[87]="\87",[88]="\88",[89]="\89",[90]="\90",[91]="\91",[92]="\92",[93]="\93",[94]="\94",[95]="\95",[96]="\96",[97]="\97",[98]="\98",[99]="\99",[100]="\100",[101]="\101",[102]="\102",[103]="\103",[104]="\104",[105]="\105",[106]="\106",[107]="\107",[108]="\108",[109]="\109",[110]="\110",[111]="\111",[112]="\112",[113]="\113",[114]="\114",[115]="\115",[116]="\116",[117]="\117",[118]="\118",[119]="\119",[120]="\120",[121]="\121",[122]="\122",[123]="\123",[124]="\124",[125]="\125",[126]="\126",[127]="\127",[128]="\128",[129]="\129",[130]="\130",[131]="\131",[132]="\132",[133]="\133",[134]="\134",[135]="\135",[136]="\136",[137]="\137",[138]="\138",[139]="\139",[140]="\140",[141]="\141",[142]="\142",[143]="\143",[144]="\144",[145]="\145",[146]="\146",[147]="\147",[148]="\148",[149]="\149",[150]="\150",[151]="\151",[152]="\152",[153]="\153",[154]="\154",[155]="\155",[156]="\156",[157]="\157",[158]="\158",[159]="\159",[160]="\160",[161]="\161",[162]="\162",[163]="\163",[164]="\164",[165]="\165",[166]="\166",[167]="\167",[168]="\168",[169]="\169",[170]="\170",[171]="\171",[172]="\172",[173]="\173",[174]="\174",[175]="\175",[176]="\176",[177]="\177",[178]="\178",[179]="\179",[180]="\180",[181]="\181",[182]="\182",[183]="\183",[184]="\184",[185]="\185",[186]="\186",[187]="\187",[188]="\188",[189]="\189",[190]="\190",[191]="\191",[192]="\192",[193]="\193",[194]="\194",[195]="\195",[196]="\196",[197]="\197",[198]="\198",[199]="\199",[200]="\200",[201]="\201",[202]="\202",[203]="\203",[204]="\204",[205]="\205",[206]="\206",[207]="\207",[208]="\208",[209]="\209",[210]="\210",[211]="\211",[212]="\212",[213]="\213",[214]="\214",[215]="\215",[216]="\216",[217]="\217",[218]="\218",[219]="\219",[220]="\220",[221]="\221",[222]="\222",[223]="\223",[224]="\224",[225]="\225",[226]="\226",[227]="\227",[228]="\228",[229]="\229",[230]="\230",[231]="\231",[232]="\232",[233]="\233",[234]="\234",[235]="\235",[236]="\236",[237]="\237",[238]="\238",[239]="\239",[240]="\240",[241]="\241",[242]="\242",[243]="\243",[244]="\244",[245]="\245",[246]="\246",[247]="\247",[248]="\248",[249]="\249",[250]="\250",[251]="\251",[252]="\252",[253]="\253",[254]="\254",[255]="\255"}local
⁭⁭‪⁭=⁮‪‪[⁮⁮⁪⁮]if
not
⁭⁭‪⁭
then
⁭⁭‪⁭=_G['\x73\x74\x72\x69\x6E\x67']['\x63\x68\x61\x72'](⁮⁮⁪⁮)end
return
⁭⁭‪⁭
end
__FLOOR=function(⁮⁭)return
⁮⁭-(⁮⁭%1)end
__XOR=function(...)local
‪⁪,⁮⁭‪⁪=0,{...}for
⁭⁪﻿=0,31
do
local
‪=0
for
﻿﻿⁮=1,#⁮⁭‪⁪
do
‪=‪+(⁮⁭‪⁪[﻿﻿⁮]*.5)end
if
‪~=__FLOOR(‪)then
‪⁪=‪⁪+2^⁭⁪﻿
end
for
﻿﻿⁪⁪=1,#⁮⁭‪⁪
do
⁮⁭‪⁪[﻿﻿⁪⁪]=__FLOOR(⁮⁭‪⁪[﻿﻿⁪⁪]*.5)end
end
return
‪⁪
end
local
说=(function(⁭,‪)local
﻿﻿,‪﻿⁮⁪,﻿⁭‪﻿,⁮⁭⁭‪='',0,#‪,#⁭
for
⁭‪﻿⁪=1,﻿⁭‪﻿
do
‪﻿⁮⁪=‪﻿⁮⁪+1
local
﻿‪﻿⁮=‪[⁭‪﻿⁪]if
﻿‪﻿⁮..''~=﻿‪﻿⁮
then
﻿﻿=﻿﻿..__CHAR(﻿‪﻿⁮/(⁭[‪﻿⁮⁪])/((﻿⁭‪﻿*⁮⁭⁭‪)))else
﻿﻿=﻿﻿..﻿‪﻿⁮
end
if
‪﻿⁮⁪==⁮⁭⁭‪
then
‪﻿⁮⁪=0
end
end
return
﻿﻿
end)({162,240,146,157,344},{2175660,4773600,2879120,1761540,6842160,2809080,4161600,2506820,3042660,3391840,1845180,4406400,2506820,2588930,6666720,881280,2366400,794240,2081820,6491280,3194640,1305600,2606100,2909210,6549760,2974320,4120800,2705380,2695690,6432800,3194640,4120800,2482000,1227740})
local
国=(function(⁭,⁪)local
⁭⁪﻿,⁭﻿,⁮⁭,﻿⁪⁭='',0,#⁪,#⁭
for
⁪﻿⁪=1,⁮⁭
do
⁭﻿=⁭﻿+1
local
⁪⁪⁮=⁪[⁪﻿⁪]if
⁪⁪⁮..''~=⁪⁪⁮
then
⁭⁪﻿=⁭⁪﻿..__CHAR(⁪⁪⁮/(⁭[⁭﻿])/((⁮⁭*﻿⁪⁭)))else
⁭⁪﻿=⁭⁪﻿..⁪⁪⁮
end
if
⁭﻿==﻿⁪⁭
then
⁭﻿=0
end
end
return
⁭⁪﻿
end)({215,209,53,110,133,318,208},{4280220,6162156,1549296,1829520,3921372,8173872,5346432,5472180,6004152,774648,1968120,3385116,9295776,4350528,5688900,6425496,1348956,887040,1943928,2564352,4088448,6013980,6109488,427392,2910600,3653244,8975232,5660928,5472180,5740812,1348956,3049200,3887856,8093736,5241600,2492280})
local
和=(function(﻿﻿⁪,﻿﻿)local
‪⁮﻿,⁭﻿⁮﻿,﻿⁭,⁪='',0,#﻿﻿,#﻿﻿⁪
for
⁮=1,﻿⁭
do
⁭﻿⁮﻿=⁭﻿⁮﻿+1
local
‪=﻿﻿[⁮]if
‪..''~=‪
then
‪⁮﻿=‪⁮﻿..__CHAR(‪/(﻿﻿⁪[⁭﻿⁮﻿])/((﻿⁭*⁪)))else
‪⁮﻿=‪⁮﻿..‪
end
if
⁭﻿⁮﻿==⁪
then
⁭﻿⁮﻿=0
end
end
return
‪⁮﻿
end)({303,283,543},{2728818,3774654,7180632,2279772,3774654,6314004,3523284,3258462,7056828,2003436,2290602,6252102,4006872,2677746,7180632,3937788,3387510,6809220,3557826,1032384,3590316,1105344,2516436,6871122,4006872,1032384,6499710,3765078,3613344,6685416,3488742,3516558,6252102,3799620,3742392,6252102,3454200,1484052})
local
地=(function(⁪⁪⁭,‪‪)local
⁭,‪‪‪⁭,﻿⁮,⁮﻿⁪⁭='',0,#‪‪,#⁪⁪⁭
for
‪‪⁪=1,﻿⁮
do
‪‪‪⁭=‪‪‪⁭+1
local
⁮⁭=‪‪[‪‪⁪]if
⁮⁭..''~=⁮⁭
then
⁭=⁭..__CHAR(⁮⁭/(⁪⁪⁭[‪‪‪⁭])/((﻿⁮*⁮﻿⁪⁭)))else
⁭=⁭..⁮⁭
end
if
‪‪‪⁭==⁮﻿⁪⁭
then
‪‪‪⁭=0
end
end
return
⁭
end)({68,197,375,49,118,203},{1095888,4701996,8874000,659736,2816424,4224024,1414944,4058988,8721000,579768,2046120,3023076,1525920,4661808,4284000,319872,1396176,1325184,1082016,4460868,8874000,319872,2527560,4513908,1553664,4340304,7726500,1089564,2431272,4555320,1609152,4058988,7650000,459816})
local
也=(function(⁭,⁪﻿)local
⁪,⁮⁪,⁮⁪⁮‪,⁭﻿⁪='',0,#⁪﻿,#⁭
for
⁭⁪⁭⁮=1,⁮⁪⁮‪
do
⁮⁪=⁮⁪+1
local
⁭⁭⁮⁭=⁪﻿[⁭⁪⁭⁮]if
⁭⁭⁮⁭..''~=⁭⁭⁮⁭
then
⁪=⁪..__CHAR(⁭⁭⁮⁭/(⁭[⁮⁪])/((⁮⁪⁮‪*⁭﻿⁪)))else
⁪=⁪..⁭⁭⁮⁭
end
if
⁮⁪==⁭﻿⁪
then
⁮⁪=0
end
end
return
⁪
end)({533,243,413,491,105,281,231,310},{11116248,7505784,12647712,8555184,3243240,7566768,6220368,8265840,16041168,3720816,7959336,14258640,3215520,4154304,1951488,4746720,4502784,5003856,12102552,15036384,887040,7789320,6647256,9166080,15196896,6479352,11884488,13092024,3049200,8605344,6159384,8184000,6472752})
local
子=(function(⁮⁮﻿⁭,‪⁮⁮)local
﻿﻿,⁪⁮⁪⁪,‪⁮⁪,﻿⁮‪='',0,#‪⁮⁮,#⁮⁮﻿⁭
for
⁮⁭⁭﻿=1,‪⁮⁪
do
⁪⁮⁪⁪=⁪⁮⁪⁪+1
local
‪⁭=‪⁮⁮[⁮⁭⁭﻿]if
‪⁭..''~=‪⁭
then
﻿﻿=﻿﻿..__CHAR(‪⁭/(⁮⁮﻿⁭[⁪⁮⁪⁪])/((‪⁮⁪*﻿⁮‪)))else
﻿﻿=﻿﻿..‪⁭
end
if
⁪⁮⁪⁪==﻿⁮‪
then
⁪⁮⁪⁪=0
end
end
return
﻿﻿
end)({65,136,545},{539175,1670760,6638100,450450,1670760,5836950,696150,1442280,6523650,395850,1185240,6638100,778050,1499400,6294750,702975,456960,3319050,218400,1113840,6351975,791700,456960,6008625,743925,1599360,6180300,689325,1556520,5779725,750750,1656480,5779725,682500,656880})
local
夜=(function(⁭﻿⁮,‪‪)local
⁭﻿⁭,‪⁭⁭,‪‪﻿,⁪‪⁮⁪='',0,#‪‪,#⁭﻿⁮
for
‪⁪﻿﻿=1,‪‪﻿
do
‪⁭⁭=‪⁭⁭+1
local
⁪⁪⁮‪=‪‪[‪⁪﻿﻿]if
⁪⁪⁮‪..''~=⁪⁪⁮‪
then
⁭﻿⁭=⁭﻿⁭..__CHAR(⁪⁪⁮‪/(⁭﻿⁮[‪⁭⁭])/((‪‪﻿*⁪‪⁮⁪)))else
⁭﻿⁭=⁭﻿⁭..⁪⁪⁮‪
end
if
‪⁭⁭==⁪‪⁮⁪
then
‪⁭⁭=0
end
end
return
⁭﻿⁭
end)({172,215,384,315,146,256},{817344,1625400,3207168,1519560,1166832,2027520,1461312,1563480,3151872,2630880,1061712,2101248})
local
﻿﻿⁭‪=bit.band
local
⁮⁭⁪⁮=math.floor
local
‪⁭⁭‪=math.min
local
﻿﻿⁪=string.byte
function
gAC.OutBuffer()local
self={}function
self:Clear()Error((
说
))end
function
self:GetSize()Error((
国
))end
function
self:GetString()Error((
和
))end
function
self:UInt8(⁮⁭﻿)Error((
地
))end
function
self:UInt16(⁮﻿‪⁪)self:UInt8(⁮﻿‪⁪%0x0100)self:UInt8(⁮⁭⁪⁮(⁮﻿‪⁪/0x0100))end
function
self:UInt32(⁪⁭‪﻿)self:UInt16(⁪⁭‪﻿%0x00010000)self:UInt16(⁮⁭⁪⁮(⁪⁭‪﻿/0x00010000))end
function
self:UInt64(⁭‪)self:UInt32(⁭‪%4294967296)self:UInt32(⁮⁭⁪⁮(⁭‪/4294967296))end
function
self:ULEB128(‪‪‪)if
‪‪‪~=‪‪‪
then
‪‪‪=0
end
if
‪‪‪<0
then
‪‪‪=-‪‪‪
end
if
‪‪‪>=4294967296
then
‪‪‪=4294967295
end
while
‪‪‪>0
do
if
‪‪‪>=0x80
then
self:UInt8(0x80+﻿﻿⁭‪(‪‪‪,0x7F))‪‪‪=⁮⁭⁪⁮(‪‪‪/0x80)else
self:UInt8(﻿﻿⁭‪(‪‪‪,0x7F))end
end
end
function
self:Int8(⁪⁮⁭⁮)Error((
也
))end
function
self:Int16(⁪⁮﻿)self:UInt8(⁪⁮﻿%0x0100)self:Int8(⁮⁭⁪⁮(⁪⁮﻿/0x0100))end
function
self:Int32(⁪⁮⁭⁭)self:UInt16(⁪⁮⁭⁭%0x00010000)self:Int16(⁮⁭⁪⁮(⁪⁮⁭⁭/0x00010000))end
function
self:Int64(‪﻿‪)self:UInt32(‪﻿‪%4294967296)self:Int32(⁮⁭⁪⁮(‪﻿‪/4294967296))end
function
self:Float(⁭⁭⁮)local
⁪⁮‪=gAC[
(
夜
)
].FloatToUInt32(⁭⁭⁮)self:UInt32(⁪⁮‪)end
function
self:Double(⁮﻿⁮⁭)local
⁪⁭,﻿⁭‪=gAC[
(
夜
)
].DoubleToUInt32s(⁮﻿⁮⁭)self:UInt32(⁪⁭)self:UInt32(﻿⁭‪)end
function
self:Vector(﻿⁮⁭⁮)self:Float(﻿⁮⁭⁮.x)self:Float(﻿⁮⁭⁮.y)self:Float(﻿⁮⁭⁮.z)end
function
self:Bytes(﻿﻿﻿,⁮)⁮=⁮
or#﻿﻿﻿
⁮=‪⁭⁭‪(⁮,#﻿﻿﻿)for
⁪⁭⁮=1,⁮
do
self:UInt8(﻿﻿⁪(﻿﻿﻿,⁪⁭⁮))end
end
function
self:String(‪﻿⁮)Error((
子
))end
function
self:StringN8(⁭⁪)⁭⁪=⁭⁪
or""self:UInt8(#⁭⁪)self:Bytes(⁭⁪)end
function
self:StringN16(⁮‪⁪⁭)⁮‪⁪⁭=⁮‪⁪⁭
or""self:UInt16(#⁮‪⁪⁭)self:Bytes(⁮‪⁪⁭)end
function
self:StringN32(⁮⁭‪﻿)⁮⁭‪﻿=⁮⁭‪﻿
or""self:UInt32(#⁮⁭‪﻿)self:Bytes(⁮⁭‪﻿)end
function
self:StringZ(⁭⁭‪⁮)⁭⁭‪⁮=⁭⁭‪⁮
or""self:Bytes(⁭⁭‪⁮)self:UInt8(0)end
function
self:Boolean(﻿‪)self:UInt8(﻿‪
and
1
or
0)end
return
self
end