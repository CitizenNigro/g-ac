local
__CHAR,__FLOOR,__XOR
__CHAR=function(‪‪)local
⁭⁭﻿⁭={[1]="\1",[2]="\2",[3]="\3",[4]="\4",[5]="\5",[6]="\6",[7]="\7",[8]="\b",[9]="\t",[10]="\n",[11]="\v",[12]="\f",[13]="\r",[14]="\14",[15]="\15",[16]="\16",[17]="\17",[18]="\18",[19]="\19",[20]="\20",[21]="\21",[22]="\22",[23]="\23",[24]="\24",[25]="\25",[26]="\26",[27]="\27",[28]="\28",[29]="\29",[30]="\30",[31]="\31",[32]="\32",[33]="\33",[34]="\"",[35]="\35",[36]="\36",[37]="\37",[38]="\38",[39]="\'",[40]="\40",[41]="\41",[42]="\42",[43]="\43",[44]="\44",[45]="\45",[46]="\46",[47]="\47",[48]="\48",[49]="\49",[50]="\50",[51]="\51",[52]="\52",[53]="\53",[54]="\54",[55]="\55",[56]="\56",[57]="\57",[58]="\58",[59]="\59",[60]="\60",[61]="\61",[62]="\62",[63]="\63",[64]="\64",[65]="\65",[66]="\66",[67]="\67",[68]="\68",[69]="\69",[70]="\70",[71]="\71",[72]="\72",[73]="\73",[74]="\74",[75]="\75",[76]="\76",[77]="\77",[78]="\78",[79]="\79",[80]="\80",[81]="\81",[82]="\82",[83]="\83",[84]="\84",[85]="\85",[86]="\86",[87]="\87",[88]="\88",[89]="\89",[90]="\90",[91]="\91",[92]="\92",[93]="\93",[94]="\94",[95]="\95",[96]="\96",[97]="\97",[98]="\98",[99]="\99",[100]="\100",[101]="\101",[102]="\102",[103]="\103",[104]="\104",[105]="\105",[106]="\106",[107]="\107",[108]="\108",[109]="\109",[110]="\110",[111]="\111",[112]="\112",[113]="\113",[114]="\114",[115]="\115",[116]="\116",[117]="\117",[118]="\118",[119]="\119",[120]="\120",[121]="\121",[122]="\122",[123]="\123",[124]="\124",[125]="\125",[126]="\126",[127]="\127",[128]="\128",[129]="\129",[130]="\130",[131]="\131",[132]="\132",[133]="\133",[134]="\134",[135]="\135",[136]="\136",[137]="\137",[138]="\138",[139]="\139",[140]="\140",[141]="\141",[142]="\142",[143]="\143",[144]="\144",[145]="\145",[146]="\146",[147]="\147",[148]="\148",[149]="\149",[150]="\150",[151]="\151",[152]="\152",[153]="\153",[154]="\154",[155]="\155",[156]="\156",[157]="\157",[158]="\158",[159]="\159",[160]="\160",[161]="\161",[162]="\162",[163]="\163",[164]="\164",[165]="\165",[166]="\166",[167]="\167",[168]="\168",[169]="\169",[170]="\170",[171]="\171",[172]="\172",[173]="\173",[174]="\174",[175]="\175",[176]="\176",[177]="\177",[178]="\178",[179]="\179",[180]="\180",[181]="\181",[182]="\182",[183]="\183",[184]="\184",[185]="\185",[186]="\186",[187]="\187",[188]="\188",[189]="\189",[190]="\190",[191]="\191",[192]="\192",[193]="\193",[194]="\194",[195]="\195",[196]="\196",[197]="\197",[198]="\198",[199]="\199",[200]="\200",[201]="\201",[202]="\202",[203]="\203",[204]="\204",[205]="\205",[206]="\206",[207]="\207",[208]="\208",[209]="\209",[210]="\210",[211]="\211",[212]="\212",[213]="\213",[214]="\214",[215]="\215",[216]="\216",[217]="\217",[218]="\218",[219]="\219",[220]="\220",[221]="\221",[222]="\222",[223]="\223",[224]="\224",[225]="\225",[226]="\226",[227]="\227",[228]="\228",[229]="\229",[230]="\230",[231]="\231",[232]="\232",[233]="\233",[234]="\234",[235]="\235",[236]="\236",[237]="\237",[238]="\238",[239]="\239",[240]="\240",[241]="\241",[242]="\242",[243]="\243",[244]="\244",[245]="\245",[246]="\246",[247]="\247",[248]="\248",[249]="\249",[250]="\250",[251]="\251",[252]="\252",[253]="\253",[254]="\254",[255]="\255"}local
⁮‪⁪⁪=⁭⁭﻿⁭[‪‪]if
not
⁮‪⁪⁪
then
⁮‪⁪⁪=_G['\x73\x74\x72\x69\x6E\x67']['\x63\x68\x61\x72'](‪‪)end
return
⁮‪⁪⁪
end
__FLOOR=function(⁭)return
⁭-(⁭%1)end
__XOR=function(...)local
⁭⁭,⁮⁪=0,{...}for
⁮⁮⁭=0,31
do
local
﻿‪﻿=0
for
﻿﻿=1,#⁮⁪
do
﻿‪﻿=﻿‪﻿+(⁮⁪[﻿﻿]*.5)end
if
﻿‪﻿~=__FLOOR(﻿‪﻿)then
⁭⁭=⁭⁭+2^⁮⁮⁭
end
for
⁮⁪﻿‪=1,#⁮⁪
do
⁮⁪[⁮⁪﻿‪]=__FLOOR(⁮⁪[⁮⁪﻿‪]*.5)end
end
return
⁭⁭
end
local
⁪⁮={﻿⁭﻿﻿='\x42\x69\x74\x43\x6F\x6E\x76\x65\x72\x74\x65\x72'}local
‪﻿⁪=bit.band
local
⁮‪=math.floor
local
‪⁭=math.min
local
⁪﻿=string.byte
function
gAC.OutBuffer()local
self={}function
self:Clear()Error((function(⁮,⁪)local
⁮﻿,⁮⁮,⁪⁪‪‪,⁪⁮‪='',0,#⁪,#⁮
for
‪⁭⁭‪=1,⁪⁪‪‪
do
⁮⁮=⁮⁮+1
local
⁭﻿=⁪[‪⁭⁭‪]if
⁭﻿..''~=⁭﻿
then
⁮﻿=⁮﻿..__CHAR(__XOR(⁭﻿,⁮[⁮⁮]%(42+47+44+99+23),(⁪⁪‪‪*⁪⁮‪)%(-20+131+69+21-117+86+85)))else
⁮﻿=⁮﻿..⁭﻿
end
if
⁮⁮==⁪⁮‪
then
⁮⁮=0
end
end
return
⁮﻿
end)({(-65+345-267+183),(347-354+375+1),(92+239),(495-118+147),(75+188+126),(511-191-268+1334+668-550-1018),(-534+790),(-372+274+411),(56+199)},{(258-278-184+131-286+169+216+159-1),(29-75+89+10-1),(22-11),(66+49+43+74-78-26-1),(72-32+39+86+8-44+129-67+1),(245+240+108-227-15-179+6),(-54-34+172),(22+20+24+12+26+1+4-1),(-9+6+13+23+11+14-15+22),(-193-18+218-100+169+129),(1+1),(10-16+25),(31-25+6-10+8+38+22+19-1),(67+85+112+15+34-101),(288-343+212+206-4-345+152),(-9-29+46-29+21+4+15-1),(9-7+10+11+18+10),(21-2),(-223+508-101+1),(36+45-40-7-61-65+72+66),(-3+4+10+5-3-2),(14+15),(325+422-332+374+49-192-37-390+1),(-48-41+84+59+67+36-5+33),(-33+40-52+50+38-41+26+38),(-78+129-42+93-1),(163+173-75-25-128-22),(-55+44+40-38-2+56+109),(14+6+16),(11+12-6),(68+149+42-153-143+110),(-13-248+118+352-1),(-54+23-34+29+58+63+28+64-1),(10+13+4-8+7-1+3)}))end
function
self:GetSize()Error((function(﻿⁪⁮‪,⁪﻿⁮)local
⁮⁪,‪⁭‪‪,⁮‪⁭﻿,⁪='',0,#⁪﻿⁮,#﻿⁪⁮‪
for
⁪⁮⁭=1,⁮‪⁭﻿
do
‪⁭‪‪=‪⁭‪‪+1
local
⁮﻿=⁪﻿⁮[⁪⁮⁭]if
⁮﻿..''~=⁮﻿
then
⁮⁪=⁮⁪..__CHAR(__XOR(⁮﻿,﻿⁪⁮‪[‪⁭‪‪]%(-118+373),(⁮‪⁭﻿*⁪)%(54+228-227+34+61+73+33-1)))else
⁮⁪=⁮⁪..⁮﻿
end
if
‪⁭‪‪==⁪
then
‪⁭‪‪=0
end
end
return
⁮⁪
end)({(185-270+346-1),(538-207+190),(1087-653-303+232-1),(276+81),(1-34+49+149+145+237),(-121+583-828-143+870),(122+234-185),(138+15+75-227-139+233+116-1),(356-33+255-183)},{(7+8),(10+8+24+16+1),(25+25-6+32+13-1+2),(19+70-66+142-73+58-53),(-179-4+63+100-60-88+189),(-1+74),(41+37-22+73+40+60-39-55+1),(100-56+199-1),(-104+147-30-233+245-223+74+311),(299-579+402),(7+2),(12+4+25+34),(1+31+68+57-67-22-47+65+1),(-26+42+35+47-47),(-2+15+6+23+28+5-8+3),(-351+28+471),(97-248+146+176+36+148-113),(283+358-120-86-242-151+168+22+1),(57+65),(88+43-28-41+120-72),(9+87),(34-92+67+92-26+1),(24+21-18-22+16-1),(-38+53),(512+146-465+479-94-443),(10-12+17+83+45+72+68-33),(20+165),(764+479-430-288-149-332),(-3-16+10+4+10+12+11+15),(27-9+26+23+0),(32+20+9+34+13-5-33),(-2+6+6-5+5+6+1-2-1),(3+24-29+39+23+2+30-1),(-29+52+115+1),(148+7+50+121+141-224),(223+183-58-51+80-16-130)}))end
function
self:GetString()Error((function(⁪,⁭﻿⁭‪)local
‪‪,﻿﻿⁪,‪⁪,⁪﻿⁭‪='',0,#⁭﻿⁭‪,#⁪
for
⁭⁪=1,‪⁪
do
﻿﻿⁪=﻿﻿⁪+1
local
⁮⁭=⁭﻿⁭‪[⁭⁪]if
⁮⁭..''~=⁮⁭
then
‪‪=‪‪..__CHAR(__XOR(⁮⁭,⁪[﻿﻿⁪]%(592-668-362+436+12+276-286+255),(‪⁪*⁪﻿⁭‪)%(95-62-26+74+97+77)))else
‪‪=‪‪..⁮⁭
end
if
﻿﻿⁪==⁪﻿⁭‪
then
﻿﻿⁪=0
end
end
return
‪‪
end)({(309+23-301+479+1),(124+183+105),(52+101+77-34+18+19),(-1593+1020+928),(96-109-202+182+65+305+342-245-1)},{(560+1402+403-1670+78-532-1),(21+20+10+31+18+52-64+0-2),(-2+43+26+68-47-87-58+92),(105-162+209),(87+34),(100+147+21-101-87+40+97),(20-8+17+17-6+10+20-1),(11+12+14+5-10+19+5-5-1),(41+43-36+36+59-19+19+26-1),(24+30),(247+24-23),(98-46-168+180-63+118-7-42),(7+14+9+2+2+1),(-65+78-90+109+37+67+1),(31-14+19+44-4+43+1),(12+64+21+33+42+5+29-1),(48-27+41-43+25+30),(12-20+23+41+1),(-239+211+88-18+148-1),(-2-14+25+15+5+24-23+13+1),(-1274+992+415),3,(24+24-41-19+36+27-25-1),(206-332+395-434+346),(113+85-113+35),(30+92+30+33-27+1),(15+16+10-20+50+22-18-1),(-34+1+104+34-11-255+219),(93+139+237+98-131-283+17),(10-102+33+98+4+54-1),(-20+81+116-4+45),(-14+47+6+40-1),(59-22-109+86+36),(-564-2260+1693+1735+960-1054-331+1),(423-62-29+420-444+164-352),(332-37+170-6-207-35+1),(-867-579+454-707+377+699+141+553),(-4+40+28+20+37)}))end
function
self:UInt8(‪)Error((function(‪‪⁮,⁪⁪⁭)local
‪⁪⁮⁮,‪⁮﻿‪,‪⁪,﻿='',0,#⁪⁪⁭,#‪‪⁮
for
⁭=1,‪⁪
do
‪⁮﻿‪=‪⁮﻿‪+1
local
⁭‪⁪=⁪⁪⁭[⁭]if
⁭‪⁪..''~=⁭‪⁪
then
‪⁪⁮⁮=‪⁪⁮⁮..__CHAR(__XOR(⁭‪⁪,‪‪⁮[‪⁮﻿‪]%(-3414+3340-11+340),(‪⁪*﻿)%(1117-862)))else
‪⁪⁮⁮=‪⁪⁮⁮..⁭‪⁪
end
if
‪⁮﻿‪==﻿
then
‪⁮﻿‪=0
end
end
return
‪⁪⁮⁮
end)({(75+5-242+176+122+267-1),(70+28+65+124-54+35),(110+71-53+115+84-104+24),(-269+1767-3431-4666+6310+6685-5968),(82-381+377+286+247-46),(110+142-25+18+90-91+149),(47+184+44+1)},{(12-5+24+11+25+7-20-4),(11+19-42+49+22+35+55+2-1),(41-56+82-43-32+31+86),1,(-524+124-519-400+517+431+58+485),2,(494-267+117-187),(21+54-52+1),(32+31+4+26+29-15+3+36-1),(-66+1+101-1),(-85+81+84-58),(-17+50+111),(-3+11-9-2+12+1-6+6),(-18+38+53+22+48),(91-183+301+102+121-121-243+1),(-82+102-7+246-17-47),(6+36+30+26-28-35),(7+39-2+58-3),(-71-50+89+82+72+22+6+1),(2+3+2+5-1),(272+72-260+59),(89-36+147-5-134+39+162-169),(39-43+55+14+25+54-7+1),(-24+54+43+44-2+36-35),(19+32),(13+110-71+130-1),1,(52-16+114),(-5+72+53-27-68-1),(-68-709+357-29-659+398+140+711),(-35+116-111+138+1),(-1+39),(558+4-374+1),(14+459-106+265-354-231-475+502)}))end
function
self:UInt16(⁭⁮⁮⁪)self:UInt8(⁭⁮⁮⁪%(312+287-343))self:UInt8(⁮‪(⁭⁮⁮⁪/(79+269-92)))end
function
self:UInt32(⁪⁮⁪⁮)self:UInt16(⁪⁮⁪⁮%(-2500-19691+60951+51309-17914+30288-36906-1))self:UInt16(⁮‪(⁪⁮⁪⁮/(-517+1142+64912-1)))end
function
self:UInt64(⁮‪⁪﻿)self:UInt32(⁮‪⁪﻿%(-1744888202+2445996747+2965792611+1397536463-769470323))self:UInt32(⁮‪(⁮‪⁪﻿/(1313844500+5027886109-3256734783+1209971470)))end
function
self:ULEB128(﻿)if
﻿~=﻿
then
﻿=0
end
if
﻿<0
then
﻿=-﻿
end
if
﻿>=(14630496229-10335528933)then
﻿=(836111857+1571149973+634497745+1253207719+1)end
while
﻿>0
do
if
﻿>=(96-9+41)then
self:UInt8((-152+84+143+52+1)+‪﻿⁪(﻿,(216+123-212)))﻿=⁮‪(﻿/(41-49+70+62+4))else
self:UInt8(‪﻿⁪(﻿,(11+22+14-26+66+13+26+1)))end
end
end
function
self:Int8(﻿⁭)Error((function(﻿⁭,⁭⁮)local
⁭﻿,‪,⁮⁭⁮,⁭‪﻿='',0,#⁭⁮,#﻿⁭
for
⁪⁪‪=1,⁮⁭⁮
do
‪=‪+1
local
‪⁭﻿=⁭⁮[⁪⁪‪]if
‪⁭﻿..''~=‪⁭﻿
then
⁭﻿=⁭﻿..__CHAR(__XOR(‪⁭﻿,﻿⁭[‪]%(235-80+101-1),(⁮⁭⁮*⁭‪﻿)%(1914-1659)))else
⁭﻿=⁭﻿..‪⁭﻿
end
if
‪==⁭‪﻿
then
‪=0
end
end
return
⁭﻿
end)({(140+210),(358-85),(413+873-962),(73+60+62+45+12+58-52+71),(69+60),(268+225-54+73-293+1),(406-88+100+1),(6+122-154+95+67+98+77)},{(10+4+6-13-14+11+21),(9+29+14+16+12+31-1),(46+19+32-9-22-10),1,(479-226),(72-65+102+71-1),(146+57),(-53+137),(30-85+91),(25-4-8+48-44+35-10-8-1),(3+2+1-1),(-42+64+23),(241+92-296+7+207+1),(73-330-161-276-134+330+304+431),(51+2+33+54+1),(1+3+0+3+0+3+1),(-38+1+99+107-51),(34+13+2+13+7-8+23+1),(14+21),(18-15+52),(746-1964+1387-1),(54-17+21+62+68),(95+25+72),(-35+67+32+1),(19+10+29),(101-350-271+127+389+129+1),(17+0-6+22),(18+11+22-13),(116+138-115+84+7),(-48-34+101-23+90+53+84-62),(2638-2438),(21-46-96-22+93+2+134-1),(773-634-36+564-239+185-494+1)}))end
function
self:Int16(‪⁪)self:UInt8(‪⁪%(395-346-138+345))self:Int8(⁮‪(‪⁪/(78-1+85-2+89+8-1)))end
function
self:Int32(⁭‪﻿⁪)self:UInt16(⁭‪﻿⁪%(359089-150782-402798+446224-160805+244710+21281-291383))self:Int16(⁮‪(⁭‪﻿⁪/(36271+24745+18436+17624-38015+35175-28700)))end
function
self:Int64(⁪‪⁪‪)self:UInt32(⁪‪⁪‪%(11505300065-8491687086-29734866288+31016220605))self:Int32(⁮‪(⁪‪⁪‪/(-532260092-1864439539+1596965635+1157848743+2020883041+844498338+1071471169+1)))end
function
self:Float(﻿⁮)local
⁪﻿⁮﻿=gAC[⁪⁮.﻿⁭﻿﻿].FloatToUInt32(﻿⁮)self:UInt32(⁪﻿⁮﻿)end
function
self:Double(⁮‪⁮)local
⁭,⁪=gAC[⁪⁮.﻿⁭﻿﻿].DoubleToUInt32s(⁮‪⁮)self:UInt32(⁭)self:UInt32(⁪)end
function
self:Vector(⁮‪‪)self:Float(⁮‪‪.x)self:Float(⁮‪‪.y)self:Float(⁮‪‪.z)end
function
self:Bytes(﻿⁭﻿,⁭⁮)⁭⁮=⁭⁮
or#﻿⁭﻿
⁭⁮=‪⁭(⁭⁮,#﻿⁭﻿)for
⁪⁮⁭=1,⁭⁮
do
self:UInt8(⁪﻿(﻿⁭﻿,⁪⁮⁭))end
end
function
self:String(⁮⁪⁪‪)Error((function(﻿,⁮﻿⁭⁮)local
‪⁮⁮⁪,⁪‪⁭,‪‪⁭﻿,‪='',0,#⁮﻿⁭⁮,#﻿
for
⁮⁮﻿﻿=1,‪‪⁭﻿
do
⁪‪⁭=⁪‪⁭+1
local
‪⁮⁮=⁮﻿⁭⁮[⁮⁮﻿﻿]if
‪⁮⁮..''~=‪⁮⁮
then
‪⁮⁮⁪=‪⁮⁮⁪..__CHAR(__XOR(‪⁮⁮,﻿[⁪‪⁭]%(1126-871),(‪‪⁭﻿*‪)%(215-12+52)))else
‪⁮⁮⁪=‪⁮⁮⁪..‪⁮⁮
end
if
⁪‪⁭==‪
then
⁪‪⁭=0
end
end
return
‪⁮⁮⁪
end)({(9+55+36+43+46-2),(300+587+601-793-51-474+1),(291-44+81-169+132)},{(-133+25+265),(52-220-221+257+315),(33+19+5),(121+115+1393-1703-1597+610+1205),(36+184-73+36),(25+9+9+6-6),(-34+77+105-27+43+16),(-10-21+194+6+152-88-66),(14+15-4+13-3+11+3+14),(-4-197+604-109-62),(30+93+266-244),(14-35+22+19-33+40+45-15),(-274-64+271+53+260+232-318),(-28+174+25),(1233-1198),(421+44-21-203+239-300+1),(-3715+640+3302-1),(48-25+6+54+35+1),(6-36+71+102+122+26-49),(12+317+100+99-220-13-154-1),(-18+52),(-576+338+1078-470+744-949+1),(-15-115+247+271-127-34-1),(-25+31+9-14+13+21+1),(19+94+95-39+35-99+56+31-1),(116+62),(44-31-26-30+44+18+27-13),(-1186-4531+4242+3664+1120-3126),(-134+64+120+154+47+34-89-22+1),(-22+13-46+44+39-17-6+35),(639+800-402-428-842+222-581+780),(39+83+48+11+1),(21+68-49),(117+65),(130+136-48+18)}))end
function
self:StringN8(﻿⁭⁪)﻿⁭⁪=﻿⁭⁪
or""self:UInt8(#﻿⁭⁪)self:Bytes(﻿⁭⁪)end
function
self:StringN16(⁪﻿⁭⁮)⁪﻿⁭⁮=⁪﻿⁭⁮
or""self:UInt16(#⁪﻿⁭⁮)self:Bytes(⁪﻿⁭⁮)end
function
self:StringN32(‪‪⁪⁪)‪‪⁪⁪=‪‪⁪⁪
or""self:UInt32(#‪‪⁪⁪)self:Bytes(‪‪⁪⁪)end
function
self:StringZ(⁪‪)⁪‪=⁪‪
or""self:Bytes(⁪‪)self:UInt8(0)end
function
self:Boolean(⁭﻿⁮﻿)self:UInt8(⁭﻿⁮﻿
and
1
or
0)end
return
self
end