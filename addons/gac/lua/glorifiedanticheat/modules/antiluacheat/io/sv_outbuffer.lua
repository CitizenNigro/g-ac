local
‪⁪if={break﻿⁭‪='\x42\x69\x74\x43\x6F\x6E\x76\x65\x72\x74\x65\x72'}local
else‪=bit.band
local
⁪return=math.floor
local
function⁭=math.min
local
true﻿⁪=string.byte
function
gAC.OutBuffer()local
self={}function
self:Clear()Error("\x4F\x75\x74\x42\x75\x66\x66\x65\x72\x3A\x43\x6C\x65\x61\x72\x20\x3A\x20\x4E\x6F\x74\x20\x69\x6D\x70\x6C\x65\x6D\x65\x6E\x74\x65\x64\x2E")end
function
self:GetSize()Error("\x4F\x75\x74\x42\x75\x66\x66\x65\x72\x3A\x47\x65\x74\x53\x69\x7A\x65\x20\x3A\x20\x4E\x6F\x74\x20\x69\x6D\x70\x6C\x65\x6D\x65\x6E\x74\x65\x64\x2E")end
function
self:GetString()Error("\x4F\x75\x74\x42\x75\x66\x66\x65\x72\x3A\x47\x65\x74\x53\x74\x72\x69\x6E\x67\x20\x3A\x20\x4E\x6F\x74\x20\x69\x6D\x70\x6C\x65\x6D\x65\x6E\x74\x65\x64\x2E")end
function
self:UInt8(⁪﻿﻿nil)Error("\x4F\x75\x74\x42\x75\x66\x66\x65\x72\x3A\x55\x49\x6E\x74\x38\x20\x3A\x20\x4E\x6F\x74\x20\x69\x6D\x70\x6C\x65\x6D\x65\x6E\x74\x65\x64\x2E")end
function
self:UInt16(⁮true)self:UInt8(⁮true%0x0100)self:UInt8(⁪return(⁮true/0x0100))end
function
self:UInt32(⁪⁪true)self:UInt16(⁪⁪true%0x00010000)self:UInt16(⁪return(⁪⁪true/0x00010000))end
function
self:UInt64(⁭‪local)self:UInt32(⁭‪local%4294967296)self:UInt32(⁪return(⁭‪local/4294967296))end
function
self:ULEB128(nil⁭﻿⁭)if
nil⁭﻿⁭~=nil⁭﻿⁭
then
nil⁭﻿⁭=0
end
if
nil⁭﻿⁭<0
then
nil⁭﻿⁭=-nil⁭﻿⁭
end
if
nil⁭﻿⁭>=4294967296
then
nil⁭﻿⁭=4294967295
end
while
nil⁭﻿⁭>0
do
if
nil⁭﻿⁭>=0x80
then
self:UInt8(0x80+else‪(nil⁭﻿⁭,0x7F))nil⁭﻿⁭=⁪return(nil⁭﻿⁭/0x80)else
self:UInt8(else‪(nil⁭﻿⁭,0x7F))end
end
end
function
self:Int8(and⁭⁭⁮)Error("\x4F\x75\x74\x42\x75\x66\x66\x65\x72\x3A\x49\x6E\x74\x38\x20\x3A\x20\x4E\x6F\x74\x20\x69\x6D\x70\x6C\x65\x6D\x65\x6E\x74\x65\x64\x2E")end
function
self:Int16(⁭function)self:UInt8(⁭function%0x0100)self:Int8(⁪return(⁭function/0x0100))end
function
self:Int32(﻿﻿return)self:UInt16(﻿﻿return%0x00010000)self:Int16(⁪return(﻿﻿return/0x00010000))end
function
self:Int64(end‪)self:UInt32(end‪%4294967296)self:Int32(⁪return(end‪/4294967296))end
function
self:Float(until‪﻿‪)local
elseif⁭⁪=gAC[‪⁪if.break﻿⁭‪].FloatToUInt32(until‪﻿‪)self:UInt32(elseif⁭⁪)end
function
self:Double(⁮⁮﻿repeat)local
true⁪‪‪,in⁪=gAC[‪⁪if.break﻿⁭‪].DoubleToUInt32s(⁮⁮﻿repeat)self:UInt32(true⁪‪‪)self:UInt32(in⁪)end
function
self:Vector(⁭⁪⁪for)self:Float(⁭⁪⁪for.x)self:Float(⁭⁪⁪for.y)self:Float(⁭⁪⁪for.z)end
function
self:Bytes(⁮⁭false,true⁮⁪﻿)true⁮⁪﻿=true⁮⁪﻿
or#⁮⁭false
true⁮⁪﻿=function⁭(true⁮⁪﻿,#⁮⁭false)for
‪⁮⁪=1,true⁮⁪﻿
do
self:UInt8(true﻿⁪(⁮⁭false,‪⁮⁪))end
end
function
self:String(for﻿﻿⁪)Error("\x4F\x75\x74\x42\x75\x66\x66\x65\x72\x3A\x53\x74\x72\x69\x6E\x67\x20\x3A\x20\x4E\x6F\x74\x20\x69\x6D\x70\x6C\x65\x6D\x65\x6E\x74\x65\x64\x2E")end
function
self:StringN8(⁮⁮false)⁮⁮false=⁮⁮false
or""self:UInt8(#⁮⁮false)self:Bytes(⁮⁮false)end
function
self:StringN16(not⁪)not⁪=not⁪
or""self:UInt16(#not⁪)self:Bytes(not⁪)end
function
self:StringN32(repeat⁮⁪﻿)repeat⁮⁪﻿=repeat⁮⁪﻿
or""self:UInt32(#repeat⁮⁪﻿)self:Bytes(repeat⁮⁪﻿)end
function
self:StringZ(or‪)or‪=or‪
or""self:Bytes(or‪)self:UInt8(0)end
function
self:Boolean(end⁭⁭⁭)self:UInt8(end⁭⁭⁭
and
1
or
0)end
return
self
end