local
_,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J={_="config",a="LuaFileCache",b="LuaSession",c="FileSourcePath",d="source",e="funclist",f="linedefined",g="lastlinedefined",h="Print",i="_VMEVENTS",j="LuaFuncSources",k="AntiLua_FunctionVerification",l="AntiLua_LuaRefresh",m="LuaExecDetected",n="AddDetection",o="AntiLua_Net_PUNISHMENT",p="AntiLua_Net_BANTIME",q="funcname",r="VerifyLuaSource",s="execidentifier",t="AddSource",u="AntiLuaAddDetection",v="gAC_LuaExecStartup"},CompileFile,SysTime,math.Round,jit.util.funcinfo,jit.attach,file.CreateDir,file.Exists,file.Time,file.Find,file.Read,file.Size,file.Write,hook.Add,isstring,tostring,istable,pairs,pcall,timer.Create,timer.Start,CompileString,IsValid,string.dump,string.lower,string.sub,string.Explode,string.gsub,table.remove,table.concat,util.Compress,util.Decompress,util.JSONToTable,util.TableToJSON,bit.rol,bit.bxor,debug.getregistry
m("gAC.Init","gAC.AntiLua",function()if!gAC[_._].AntiLua_CHECK
then
return
end
gAC[_.a]=gAC[_.a]||nil
gAC[_.b]=gAC[_.b]||{}gAC[_.c]="LUA"gAC.LuaVM=function(k)local
n=d(k)n[_.d]=A(n[_.d],"^@","")n[_.d]=gAC.dirtosvlua(n[_.d])gAC[_.a][n[_.d]]=gAC[_.a][n[_.d]]||{}local
o=gAC[_.a][n[_.d]]if
o.bytecodes
then
return
end
o[_.e]=o[_.e]||{}o[_.e][#o[_.e]+1]={linedefined=n[_.f],lastlinedefined=n[_.g],proto=ByteCode.FunctionToHash(k,n)}end
function
gAC.HashString(k)local
n=#k
for
o=1,#k
do
n=I(n,H(n,6)+k:byte(o))end
return
H(n,3)end
gAC.LuaVMID=gAC.HashString'bc'function
gAC.dirtosvlua(k)local
n=k
n=z("/",n)if
n[1]=="addons"then
B(n,1)B(n,1)B(n,1)k=C(n,"/")elseif
n[1]=="lua"then
B(n,1)k=C(n,"/")elseif
n[1]=="gamemodes"then
B(n,1)k=C(n,"/")end
return
k
end
if
gAC[_.a]==nil
then
local
function
k(n,o,r,s)if!r
then
return
end
if#n>0
then
n=n.."/"end
local
t,u=i(n.."*",o)if!t&&!u
then
gAC[_.h]("[AntiLua] Could not add "..n.." to lua information.")return
end
for
s,t
in
q(t)do
r(n..t,o)end
if
s
then
for
t,v
in
q(u)do
if
v~="."&&v~=".."then
k(n..v,o,r,s)end
end
end
end
gAC[_.h]"[AntiLua] Initializing"if!g("gac-antilua","DATA")then
f"gac-antilua"end
gAC[_.a]={}local
n=b()gAC[_.h]"[AntiLua] Building lua file cache"if
g("gac-antilua/gac-luacache.dat","DATA")then
gAC[_.h]"[AntiLua] Detected an existing lua cache file, reading..."gAC[_.a]=F(E(j("gac-antilua/gac-luacache.dat","DATA")))gAC[_.h]"[AntiLua] Checking for modifications..."else
gAC.NoLuaCache=!!1
end
local
o,r,s={},!1,gAC[_.c]local
function
t(k)if
x(y(k,-4))~=".lua"then
return
end
if
k==""then
return
end
local
n,t=h(k,s),nil
if!gAC[_.a][k]then
gAC[_.h]("[AntiLua] Excluding "..k)t=!!1
r=!!1
elseif!p(gAC[_.a][k])||n~=gAC[_.a][k].time
then
gAC[_.h]("[AntiLua] Modifying exclusion "..k)t=!!1
r=!!1
end
if
t
then
gAC[_.a][k]={time=n}local
t=a(k)if!t&&x(k)~=k
then
gAC[_.a][k]={time=n}t=a(x(k))end
if!t
then
gAC[_.h]("[AntiLua] "..k.." Compile Error")o[#o+1]=k.." - Compile Error (switch to source verification)"t=nil
gAC[_.a][k]={time=n}return
end
end
end
local
u=J()u[_.i]=u[_.i]||{}u[_.i][gAC.LuaVMID]=gAC.LuaVM
e(function()end,"")k("",s,t,!!1)u[_.i][gAC.LuaVMID]=nil
for
k,n
in
q(gAC[_.a])do
if
h(k,s)==0
then
r=!!1
gAC[_.h]("[AntiLua] Removing exclusion "..k)gAC[_.a][k]=nil
end
end
if!r
then
gAC[_.h]"[AntiLua] Everything appears up to standards"end
gAC[_.h]("[AntiLua] Finished building lua file cache, took: "..c(b()-n,2).."s")if#o>0
then
gAC[_.h](#o.." lua files have issues")for
k=1,#o
do
gAC[_.h](o[k])end
end
if
r
then
gAC[_.h]"[AntiLua] Saving lua cache..."if
gAC.NoLuaCache
then
gAC[_.h]"[AntiLua] Server will restart on InitPostEntity (needed to remove compiled files in lua)"m("InitPostEntity","gAC.AntiLua.Restart",function(k)gAC[_.h]"[AntiLua] Restarting..."RunConsoleCommand'_restart'end)end
n=b()l("gac-antilua/gac-luacache.dat",D(G(gAC[_.a])))gAC[_.h]("[AntiLua] Saving took: "..c(b()-n,2).."s")end
gAC[_.h]"[AntiLua] Waiting for core detection systems"end
end)m("gAC.IncludesLoaded","gAC.AntiLua",function()if!gAC[_._].AntiLua_CHECK
then
return
end
gAC[_.h]"[AntiLua] Core detection system has loaded!"gAC[_.j]={["function: builtin#21"]={source="=[C]",short_src="[C]",what="C",lastlinedefined=-1,linedefined=-1},["function: builtin#20"]={source="=[C]",short_src="[C]",what="C",lastlinedefined=-1,linedefined=-1}}function
gAC.VerifyLuaSource(a,b)if!gAC[_.a][a[_.d]]&&!gAC[_.b][b][a[_.d]]then
return!1
end
return!!1
end
function
gAC.AddSource(a,b,c)if
gAC[_._][_.k]then
local
f,g=u(c,b..".AddSource",!1)if!f&&g
then
return
end
local
g=w(f)local
f=ByteCode.DumpToFunctionList(g)gAC[_.b][a][b]={funclist=f}else
gAC[_.b][a][b]=!!1
end
end
function
gAC.UpdateLuaFile(a)if!gAC[_._][_.l]then
return
end
local
b=h(a,gAC[_.c])if
b~=0
then
if
b~=gAC[_.a][a].time
then
gAC[_.h]("[AntiLua] WARNING: lua refresh occured on "..a..", switching to source verification")gAC[_.a][a]={time=b}end
else
gAC[_.h]("[AntiLua] WARNING: lua refresh occured on "..a..", switching to source verification")gAC[_.a][a]=!!1
end
end
local
a={}if!gAC[_._][_.l]then
a=nil
end
function
gAC.VerifyFunction(b,c)if!gAC[_._][_.k]then
return!!1
end
local
f=nil
if
gAC[_.b][b]&&gAC[_.b][b][c[_.d]]&&p(gAC[_.b][b][c[_.d]])&&gAC[_.b][b][c[_.d]][_.e]then
f=gAC[_.b][b][c[_.d]][_.e]elseif
gAC[_.a][c[_.d]]&&p(gAC[_.a][c[_.d]])&&gAC[_.a][c[_.d]][_.e]then
f=gAC[_.a][c[_.d]][_.e]end
if
f
then
if
a&&!a[c[_.d]]then
a[c[_.d]]=!!1
gAC.UpdateLuaFile(c[_.d])return
end
for
b=1,#f
do
local
g=f[b]if
g[_.g]~=c[_.g]then
return!1
end
if
g[_.f]~=c[_.f]then
return!1
end
if
g.proto~=c.proto
then
return!1
end
end
return!!1
end
return!!1
end
function
gAC.AntiLuaAddDetection(a,b,c,f)if
c~="Probable Execution"then
f[_.m]=!!1
gAC[_.n](f,b,gAC[_._].AntiLua_PUNISHMENT,gAC[_._].AntiLua_BANTIME)else
gAC[_.n](f,b,!1,-1)end
local
g=G(a,!!1)g="WARNING: Do not reveal this to cheaters!\nClient "..f:SteamID64().."'s reply\n"..g
g=g.."\nServer's reply\n"..b.."\n"if
c=="%unknown%"then
c="Client returned a traceback with nil or unknown type (likely a client detour attempt)"elseif
c=="Invalid Source"then
c="Client returned a traceback leading to '"..a[_.d].."' which does not exist in the lua cache"elseif
c=="Invalid Bytecode"then
c="Client returned a traceback leading to '"..a[_.d].."' which exists on the lua cache\n"c=c.."however the function information returned to it is different from the lua cache"elseif
c=="Probable Execution"then
c="Client returned a traceback leading to '"..a[_.d].."' which does not exist in the lua cache\n"c=c.."however because of the given environment information, it's unable to be confirmed."end
g=g..c
l("gac-antilua/"..f:SteamID64().."-"..os.time()..".dat",g)end
gAC.Network:AddReceiver("g-AC_LuaExec",function(b,c,f)if
f[_.m]then
return
end
local
b=f:UserID()if
c=="1"then
t("gAC.AntiLua-"..b)return
end
local
g,i=r(F,c)if!g
then
f[_.m]=!!1
gAC[_.n](f,"AntiLua network manipulation [Code 126]",gAC[_._][_.o],gAC[_._][_.p])return
end
t("gAC.AntiLua-"..b)if#i>500
then
f[_.m]=!!1
gAC[_.n](f,"AntiLua network manipulation [Code 126]",gAC[_._][_.o],gAC[_._][_.p])return
end
for
c=1,#i
do
local
g=i[c]if
g[_.q]then
if
g[_.d]&&n(g[_.d])then
if
gAC[_.r](g,b)==!1
then
if
g.func&&gAC[_.j][g.func]then
local
c=nil
for
j,k
in
q(gAC[_.j][g.func])do
if
g[j]==k
then
c=!!1
break
end
end
if
c
then
if
g[_.q]=="RunString"||g[_.q]=="RunStringEx"||g[_.q]=="CompileString"then
if
g[_.s]then
gAC[_.t](b,g[_.s],g.code)end
end
continue
end
elseif
g[_.d]=="[C]"&&g.short_src=="[C]"&&g.what=="C"then
if
g[_.q]=="RunString"||g[_.q]=="RunStringEx"||g[_.q]=="CompileString"then
if
g[_.s]then
gAC[_.t](b,g[_.s],g.code)end
end
continue
end
gAC[_.u](g,"Unauthorized lua execution (func: "..g[_.q].." | src: "..g[_.d]..") [Code 123]","Invalid Source",f)break
elseif
g[_.q]=="RunString"||g[_.q]=="RunStringEx"||g[_.q]=="CompileString"then
if
g[_.s]then
gAC[_.t](b,g[_.s],g.code)end
end
else
gAC[_.u](g,"Unauthorized lua execution [Code 123]","%unknown%",f)break
end
else
if
g[_.d]&&n(g[_.d])then
if
gAC[_.r](g,b)==!1
then
if
g[_.d]=="Startup"&&!f[_.v]&&!gAC[_._].AntiLua_IgnoreBoot
then
f[_.v]=!!1
continue
else
gAC[_.u](g,"Lua environment manipulation (src: "..g[_.d]..") [Code 124]","Invalid Source",f)break
end
elseif
gAC.VerifyFunction(g,f)==!1
then
gAC[_.u](g,"Lua environment manipulation (src: "..g[_.d]..") [Code 124]","Invalid Bytecode",f)break
end
else
gAC[_.u](g,"Lua environment manipulation [Code 124]","%unknown%",f)break
end
end
end
if
a
then
a={}end
end)m("gAC.CLFilesLoaded","gAC.AntiLua",function(a)s("gAC.AntiLua-"..a:UserID(),120,1,function()if
v(a)&&!a[_.m]then
a[_.m]=!!1
gAC[_.n](a,"AntiLua information did not arrive in time [Code 125]",gAC[_._].AntiLua_Fail_PUNISHMENT,gAC[_._].AntiLua_Fail_BANTIME)end
end)end)m("PlayerInitialSpawn","gAC.AntiLua",function(a)gAC[_.b][a:UserID()]={}end)m("PlayerDisconnected","gAC.AntiLua",function(a)gAC[_.b][a:UserID()]=nil
end)if
a
then
m("InitPostEntity","gAC.AntiLua",function(a)gAC.LuaVM=function(a)local
b=d(a)b[_.d]=A(b[_.d],"^@","")b[_.d]=gAC.dirtosvlua(b[_.d])if
p(gAC[_.a][b[_.d]])&&gAC[_.a][b[_.d]][_.e]then
gAC.UpdateLuaFile(b[_.d])end
end
local
a=J()a[_.i]=a[_.i]||{}a[_.i][gAC.LuaVMID]=gAC.LuaVM
e(function()end,"")end)end
end)