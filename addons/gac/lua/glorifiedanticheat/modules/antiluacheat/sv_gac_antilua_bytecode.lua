local
⁪local={in⁭﻿='\x53\x74\x72\x69\x6E\x67\x49\x6E\x42\x75\x66\x66\x65\x72',then⁭‪‪='\x6C\x69\x6E\x65\x64\x65\x66\x69\x6E\x65\x64'}local
end﻿=bit.band
local
elseif⁪⁭⁪=bit.rshift
local
and‪=jit.util.funcbc
local
⁭‪⁮elseif=table.concat
local
do⁭﻿=string.char
local
true‪﻿﻿=isstring
local
﻿⁪⁮repeat=tonumber
local
true‪=util.CRC
ByteCode={}local
nil﻿={[0x46]=0x51,[0x47]=0x51,[0x48]=0x51,[0x49]=0x49,[0x4A]=0x49,[0x4B]=0x4B,[0x4C]=0x4B,[0x4D]=0x4B,[0x4E]=0x4E,[0x4F]=0x4E,[0x50]=0x4E,[0x51]=0x51,[0x52]=0x51,[0x53]=0x51,}local
while⁮⁭⁮={[0x44]=0x54,[0x42]=0x41,}function
ByteCode.FunctionToHash(⁪⁭⁭true,⁪﻿﻿and)local
﻿﻿not={}for
until⁭=1,⁪﻿﻿and.bytecodes-1
do
local
elseif﻿⁪=and‪(⁪⁭⁭true,until⁭)local
⁪⁭nil=end﻿(elseif﻿⁪,0xFF)if
nil﻿[⁪⁭nil]then
elseif﻿⁪=nil﻿[⁪⁭nil]end
if
while⁮⁭⁮[⁪⁭nil]then
elseif﻿⁪=elseif﻿⁪-⁪⁭nil
elseif﻿⁪=elseif﻿⁪+while⁮⁭⁮[⁪⁭nil]end
﻿﻿not[#﻿﻿not+1]=do⁭﻿(end﻿(elseif﻿⁪,0xFF),end﻿(elseif⁪⁭⁪(elseif﻿⁪,8),0xFF),end﻿(elseif⁪⁭⁪(elseif﻿⁪,16),0xFF),end﻿(elseif⁪⁭⁪(elseif﻿⁪,24),0xFF))end
return
﻿⁪⁮repeat(true‪(⁭‪⁮elseif(﻿﻿not)))end
function
ByteCode.ByteCodeDumpToHash(while⁭‪,⁪not)if
true‪﻿﻿(while⁭‪)then
while⁭‪=gAC[⁪local.in⁭﻿](while⁭‪)end
local
if﻿⁭=gAC.StringOutBuffer()for
else⁮‪=1,⁪not
do
local
‪‪end=while⁭‪:UInt32()local
goto‪=end﻿(‪‪end,0xFF)if
nil﻿[goto‪]then
‪‪end=nil﻿[goto‪]end
if
while⁮⁭⁮[goto‪]then
‪‪end=‪‪end-goto‪
‪‪end=‪‪end+while⁮⁭⁮[goto‪]end
if﻿⁭:UInt32(‪‪end)end
return
﻿⁪⁮repeat(true‪(if﻿⁭:GetString()))end
function
ByteCode.GetFuncInformation(﻿‪⁪if,nil‪⁪﻿)nil‪⁪﻿=nil‪⁪﻿
or{}if
true‪﻿﻿(﻿‪⁪if)then
﻿‪⁪if=gAC[⁪local.in⁭﻿](﻿‪⁪if)end
﻿‪⁪if:UInt8()﻿‪⁪if:UInt8()﻿‪⁪if:UInt8()﻿‪⁪if:UInt8()﻿‪⁪if:ULEB128()﻿‪⁪if:ULEB128()local
end⁭=﻿‪⁪if:ULEB128()﻿‪⁪if:ULEB128()nil‪⁪﻿[⁪local.then⁭‪‪]=﻿‪⁪if:ULEB128()local
⁪elseif=﻿‪⁪if:ULEB128()nil‪⁪﻿.lastlinedefined=nil‪⁪﻿[⁪local.then⁭‪‪]+⁪elseif
nil‪⁪﻿.proto=ByteCode.ByteCodeDumpToHash(﻿‪⁪if,end⁭)return
nil‪⁪﻿
end
function
ByteCode.DumpToFunctionList(and⁮)local
or⁮=gAC[⁪local.in⁭﻿](and⁮)or⁮:Bytes(4)or⁮:UInt8()or⁮:Bytes(or⁮:ULEB128())local
end‪⁭﻿={}local
‪‪⁮while=or⁮:ULEB128()while
‪‪⁮while~=0
do
local
‪﻿‪local=or⁮:Bytes(‪‪⁮while)local
⁪then=ByteCode.GetFuncInformation(‪﻿‪local)end‪⁭﻿[#end‪⁭﻿+1]=⁪then
‪‪⁮while=or⁮:ULEB128()end
return
end‪⁭﻿
end